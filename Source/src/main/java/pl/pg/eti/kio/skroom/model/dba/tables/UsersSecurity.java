/**
 * This class is generated by jOOQ
 */
package pl.pg.eti.kio.skroom.model.dba.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.pg.eti.kio.skroom.model.dba.DefaultSchema;
import pl.pg.eti.kio.skroom.model.dba.Keys;
import pl.pg.eti.kio.skroom.model.dba.tables.records.UsersSecurityRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsersSecurity extends TableImpl<UsersSecurityRecord> {

    private static final long serialVersionUID = 1936802331;

    /**
     * The reference instance of <code>USERS_SECURITY</code>
     */
    public static final UsersSecurity USERS_SECURITY = new UsersSecurity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UsersSecurityRecord> getRecordType() {
        return UsersSecurityRecord.class;
    }

    /**
     * The column <code>USERS_SECURITY.ID</code>.
     */
    public final TableField<UsersSecurityRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USERS_SECURITY.USER_ID</code>.
     */
    public final TableField<UsersSecurityRecord, Integer> USER_ID = createField("USER_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USERS_SECURITY.PASSWORD</code>.
     */
    public final TableField<UsersSecurityRecord, String> PASSWORD = createField("PASSWORD", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>USERS_SECURITY.SALT</code>.
     */
    public final TableField<UsersSecurityRecord, String> SALT = createField("SALT", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>USERS_SECURITY.SECURE_QUESTION</code>.
     */
    public final TableField<UsersSecurityRecord, String> SECURE_QUESTION = createField("SECURE_QUESTION", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>USERS_SECURITY.SECURE_ANSWER</code>.
     */
    public final TableField<UsersSecurityRecord, String> SECURE_ANSWER = createField("SECURE_ANSWER", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>USERS_SECURITY</code> table reference
     */
    public UsersSecurity() {
        this("USERS_SECURITY", null);
    }

    /**
     * Create an aliased <code>USERS_SECURITY</code> table reference
     */
    public UsersSecurity(String alias) {
        this(alias, USERS_SECURITY);
    }

    private UsersSecurity(String alias, Table<UsersSecurityRecord> aliased) {
        this(alias, aliased, null);
    }

    private UsersSecurity(String alias, Table<UsersSecurityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UsersSecurityRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USERS_SECURITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UsersSecurityRecord> getPrimaryKey() {
        return Keys.PK_USERS_SECURITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UsersSecurityRecord>> getKeys() {
        return Arrays.<UniqueKey<UsersSecurityRecord>>asList(Keys.PK_USERS_SECURITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<UsersSecurityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UsersSecurityRecord, ?>>asList(Keys.FK_USERS_SECURITY_USERS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UsersSecurity as(String alias) {
        return new UsersSecurity(alias, this);
    }

    /**
     * Rename this table
     */
    public UsersSecurity rename(String name) {
        return new UsersSecurity(name, null);
    }
}
