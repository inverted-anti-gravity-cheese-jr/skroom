/**
 * This class is generated by jOOQ
 */
package pl.pg.eti.kio.skroom.model.dba.tables;


import java.sql.Date;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.pg.eti.kio.skroom.model.dba.DefaultSchema;
import pl.pg.eti.kio.skroom.model.dba.Keys;
import pl.pg.eti.kio.skroom.model.dba.tables.records.SprintsRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sprints extends TableImpl<SprintsRecord> {

    private static final long serialVersionUID = 2102090264;

    /**
     * The reference instance of <code>SPRINTS</code>
     */
    public static final Sprints SPRINTS = new Sprints();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SprintsRecord> getRecordType() {
        return SprintsRecord.class;
    }

    /**
     * The column <code>SPRINTS.ID</code>.
     */
    public final TableField<SprintsRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>SPRINTS.NAME</code>.
     */
    public final TableField<SprintsRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>SPRINTS.START_DAY</code>.
     */
    public final TableField<SprintsRecord, Date> START_DAY = createField("START_DAY", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>SPRINTS.END_DAY</code>.
     */
    public final TableField<SprintsRecord, Date> END_DAY = createField("END_DAY", org.jooq.impl.SQLDataType.DATE, this, "");

    /**
     * The column <code>SPRINTS.PROJECT_ID</code>.
     */
    public final TableField<SprintsRecord, Integer> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>SPRINTS</code> table reference
     */
    public Sprints() {
        this("SPRINTS", null);
    }

    /**
     * Create an aliased <code>SPRINTS</code> table reference
     */
    public Sprints(String alias) {
        this(alias, SPRINTS);
    }

    private Sprints(String alias, Table<SprintsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Sprints(String alias, Table<SprintsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<SprintsRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SPRINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<SprintsRecord> getPrimaryKey() {
        return Keys.PK_SPRINTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<SprintsRecord>> getKeys() {
        return Arrays.<UniqueKey<SprintsRecord>>asList(Keys.PK_SPRINTS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<SprintsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SprintsRecord, ?>>asList(Keys.FK_SPRINTS_PROJECTS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Sprints as(String alias) {
        return new Sprints(alias, this);
    }

    /**
     * Rename this table
     */
    public Sprints rename(String name) {
        return new Sprints(name, null);
    }
}
