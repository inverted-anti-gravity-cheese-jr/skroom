/**
 * This class is generated by jOOQ
 */
package pl.pg.eti.kio.skroom.model.dba.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.pg.eti.kio.skroom.model.dba.DefaultSchema;
import pl.pg.eti.kio.skroom.model.dba.Keys;
import pl.pg.eti.kio.skroom.model.dba.tables.records.TaskStatusesRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TaskStatuses extends TableImpl<TaskStatusesRecord> {

    private static final long serialVersionUID = 1156793276;

    /**
     * The reference instance of <code>TASK_STATUSES</code>
     */
    public static final TaskStatuses TASK_STATUSES = new TaskStatuses();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TaskStatusesRecord> getRecordType() {
        return TaskStatusesRecord.class;
    }

    /**
     * The column <code>TASK_STATUSES.ID</code>.
     */
    public final TableField<TaskStatusesRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TASK_STATUSES.NAME</code>.
     */
    public final TableField<TaskStatusesRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>TASK_STATUSES.STAYS_IN_SPRINT</code>.
     */
    public final TableField<TaskStatusesRecord, Integer> STAYS_IN_SPRINT = createField("STAYS_IN_SPRINT", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TASK_STATUSES.PROJECT_ID</code>.
     */
    public final TableField<TaskStatusesRecord, Integer> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>TASK_STATUSES</code> table reference
     */
    public TaskStatuses() {
        this("TASK_STATUSES", null);
    }

    /**
     * Create an aliased <code>TASK_STATUSES</code> table reference
     */
    public TaskStatuses(String alias) {
        this(alias, TASK_STATUSES);
    }

    private TaskStatuses(String alias, Table<TaskStatusesRecord> aliased) {
        this(alias, aliased, null);
    }

    private TaskStatuses(String alias, Table<TaskStatusesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TaskStatusesRecord> getPrimaryKey() {
        return Keys.PK_TASK_STATUSES;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TaskStatusesRecord>> getKeys() {
        return Arrays.<UniqueKey<TaskStatusesRecord>>asList(Keys.PK_TASK_STATUSES);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TaskStatusesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TaskStatusesRecord, ?>>asList(Keys.FK_TASK_STATUSES_PROJECTS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TaskStatuses as(String alias) {
        return new TaskStatuses(alias, this);
    }

    /**
     * Rename this table
     */
    public TaskStatuses rename(String name) {
        return new TaskStatuses(name, null);
    }
}
