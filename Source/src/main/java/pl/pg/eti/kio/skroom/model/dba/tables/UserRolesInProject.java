/**
 * This class is generated by jOOQ
 */
package pl.pg.eti.kio.skroom.model.dba.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.pg.eti.kio.skroom.model.dba.DefaultSchema;
import pl.pg.eti.kio.skroom.model.dba.Keys;
import pl.pg.eti.kio.skroom.model.dba.tables.records.UserRolesInProjectRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserRolesInProject extends TableImpl<UserRolesInProjectRecord> {

    private static final long serialVersionUID = -82821341;

    /**
     * The reference instance of <code>USER_ROLES_IN_PROJECT</code>
     */
    public static final UserRolesInProject USER_ROLES_IN_PROJECT = new UserRolesInProject();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRolesInProjectRecord> getRecordType() {
        return UserRolesInProjectRecord.class;
    }

    /**
     * The column <code>USER_ROLES_IN_PROJECT.ID</code>.
     */
    public final TableField<UserRolesInProjectRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>USER_ROLES_IN_PROJECT.ROLE</code>.
     */
    public final TableField<UserRolesInProjectRecord, String> ROLE = createField("ROLE", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>USER_ROLES_IN_PROJECT.COLOR</code>.
     */
    public final TableField<UserRolesInProjectRecord, String> COLOR = createField("COLOR", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>USER_ROLES_IN_PROJECT.PRIVILIGES</code>.
     */
    public final TableField<UserRolesInProjectRecord, Integer> PRIVILIGES = createField("PRIVILIGES", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>USER_ROLES_IN_PROJECT</code> table reference
     */
    public UserRolesInProject() {
        this("USER_ROLES_IN_PROJECT", null);
    }

    /**
     * Create an aliased <code>USER_ROLES_IN_PROJECT</code> table reference
     */
    public UserRolesInProject(String alias) {
        this(alias, USER_ROLES_IN_PROJECT);
    }

    private UserRolesInProject(String alias, Table<UserRolesInProjectRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserRolesInProject(String alias, Table<UserRolesInProjectRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserRolesInProjectRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER_ROLES_IN_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRolesInProjectRecord> getPrimaryKey() {
        return Keys.PK_USER_ROLES_IN_PROJECT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRolesInProjectRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRolesInProjectRecord>>asList(Keys.PK_USER_ROLES_IN_PROJECT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UserRolesInProject as(String alias) {
        return new UserRolesInProject(alias, this);
    }

    /**
     * Rename this table
     */
    public UserRolesInProject rename(String name) {
        return new UserRolesInProject(name, null);
    }
}
