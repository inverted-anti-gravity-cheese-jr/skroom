/**
 * This class is generated by jOOQ
 */
package pl.pg.eti.kio.skroom.model.dba.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import pl.pg.eti.kio.skroom.model.dba.DefaultSchema;
import pl.pg.eti.kio.skroom.model.dba.Keys;
import pl.pg.eti.kio.skroom.model.dba.tables.records.TasksRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tasks extends TableImpl<TasksRecord> {

    private static final long serialVersionUID = -782447396;

    /**
     * The reference instance of <code>TASKS</code>
     */
    public static final Tasks TASKS = new Tasks();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<TasksRecord> getRecordType() {
        return TasksRecord.class;
    }

    /**
     * The column <code>TASKS.ID</code>.
     */
    public final TableField<TasksRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TASKS.NAME</code>.
     */
    public final TableField<TasksRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>TASKS.ASSIGNEE</code>.
     */
    public final TableField<TasksRecord, Integer> ASSIGNEE = createField("ASSIGNEE", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TASKS.TASK_STATUS</code>.
     */
    public final TableField<TasksRecord, Integer> TASK_STATUS = createField("TASK_STATUS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TASKS.STORY_POINTS</code>.
     */
    public final TableField<TasksRecord, Integer> STORY_POINTS = createField("STORY_POINTS", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>TASKS.PROJECT_ID</code>.
     */
    public final TableField<TasksRecord, Integer> PROJECT_ID = createField("PROJECT_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>TASKS</code> table reference
     */
    public Tasks() {
        this("TASKS", null);
    }

    /**
     * Create an aliased <code>TASKS</code> table reference
     */
    public Tasks(String alias) {
        this(alias, TASKS);
    }

    private Tasks(String alias, Table<TasksRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tasks(String alias, Table<TasksRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return DefaultSchema.DEFAULT_SCHEMA;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<TasksRecord> getPrimaryKey() {
        return Keys.PK_TASKS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<TasksRecord>> getKeys() {
        return Arrays.<UniqueKey<TasksRecord>>asList(Keys.PK_TASKS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<TasksRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<TasksRecord, ?>>asList(Keys.FK_TASKS_USERS_1, Keys.FK_TASKS_PROJECTS_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tasks as(String alias) {
        return new Tasks(alias, this);
    }

    /**
     * Rename this table
     */
    public Tasks rename(String name) {
        return new Tasks(name, null);
    }
}
