/**
 * This class is generated by jOOQ
 */
package pl.pg.eti.kio.skroom.model.dba.tables.records;


import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;

import pl.pg.eti.kio.skroom.model.dba.tables.Tasks;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.8.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record8<Integer, String, String, String, Integer, Integer, Integer, Integer> {

    private static final long serialVersionUID = 1623235090;

    /**
     * Setter for <code>TASKS.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>TASKS.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TASKS.NAME</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>TASKS.NAME</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TASKS.DESCRIPTION</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>TASKS.DESCRIPTION</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>TASKS.COLOR</code>.
     */
    public void setColor(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>TASKS.COLOR</code>.
     */
    public String getColor() {
        return (String) get(3);
    }

    /**
     * Setter for <code>TASKS.ASSIGNEE</code>.
     */
    public void setAssignee(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>TASKS.ASSIGNEE</code>.
     */
    public Integer getAssignee() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>TASKS.TASK_STATUS_ID</code>.
     */
    public void setTaskStatusId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>TASKS.TASK_STATUS_ID</code>.
     */
    public Integer getTaskStatusId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>TASKS.ESTIMATED_TIME</code>.
     */
    public void setEstimatedTime(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>TASKS.ESTIMATED_TIME</code>.
     */
    public Integer getEstimatedTime() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>TASKS.PROJECT_ID</code>.
     */
    public void setProjectId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>TASKS.PROJECT_ID</code>.
     */
    public Integer getProjectId() {
        return (Integer) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, Integer, Integer, Integer, Integer> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row8<Integer, String, String, String, Integer, Integer, Integer, Integer> valuesRow() {
        return (Row8) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Tasks.TASKS.ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Tasks.TASKS.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Tasks.TASKS.DESCRIPTION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field4() {
        return Tasks.TASKS.COLOR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field5() {
        return Tasks.TASKS.ASSIGNEE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field6() {
        return Tasks.TASKS.TASK_STATUS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field7() {
        return Tasks.TASKS.ESTIMATED_TIME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field8() {
        return Tasks.TASKS.PROJECT_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDescription();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value4() {
        return getColor();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value5() {
        return getAssignee();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value6() {
        return getTaskStatusId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value7() {
        return getEstimatedTime();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value8() {
        return getProjectId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value1(Integer value) {
        setId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value3(String value) {
        setDescription(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value4(String value) {
        setColor(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value5(Integer value) {
        setAssignee(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value6(Integer value) {
        setTaskStatusId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value7(Integer value) {
        setEstimatedTime(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord value8(Integer value) {
        setProjectId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public TasksRecord values(Integer value1, String value2, String value3, String value4, Integer value5, Integer value6, Integer value7, Integer value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Integer id, String name, String description, String color, Integer assignee, Integer taskStatusId, Integer estimatedTime, Integer projectId) {
        super(Tasks.TASKS);

        set(0, id);
        set(1, name);
        set(2, description);
        set(3, color);
        set(4, assignee);
        set(5, taskStatusId);
        set(6, estimatedTime);
        set(7, projectId);
    }
}
