apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'jetty'

// JDK 8
sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
	compile 'ch.qos.logback:logback-classic:1.1.3'
	compile 'org.springframework:spring-webmvc:4.1.6.RELEASE'
	compile 'javax.servlet:jstl:1.2'
	compile 'javax.servlet.jsp:jsp-api:2.2'
	compile 'org.springframework:spring-web:4.1.6.RELEASE'
	compile group: 'org.jooq', name: 'jooq', version: '3.8.4'
	compile group: 'org.jooq', name: 'jooq-meta', version: '3.8.4'
	compile group: 'org.jooq', name: 'jooq-codegen', version: '3.8.4'
	compile group: 'org.xerial', name: 'sqlite-jdbc', version: '3.8.11.2'
	//compile group: 'log4j', name: 'log4j', version: '1.2.17'
}

/*
def jooqGenerateClasses(String targetXml) {
	javaexec {
		classpath = sourceSets.main.runtimeClasspath
		main = 'org.jooq.util.GenerationTool'
		args targetXml
	}
}

task doIt {
    doLast {
        jooqGenerateClasses("src/main/webapp/WEB-INF/jooq-class-gen.xml")
    }
}
*/

task generateClasses(type: JavaExec) {
	classpath = sourceSets.main.runtimeClasspath
	main = 'org.jooq.util.GenerationTool'
	args 'src/main/webapp/WEB-INF/jooq-class-gen.xml'
}

// Embeded Jetty for testing
jettyRun{
	contextPath = "skroom"
	httpPort = 8080
}

jettyRunWar{
	contextPath = "skroom"
	httpPort = 8080
}

//For Eclipse IDE only
eclipse {

  wtp {
    component {

      //define context path, default to project folder name
      contextPath = 'skroom'

    }

  }
}

defaultTasks 'generateClasses jettyRun'
